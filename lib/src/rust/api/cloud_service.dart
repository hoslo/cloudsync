// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.30.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'config.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<CloudService>>
@sealed
class CloudService extends RustOpaque {
  CloudService.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  CloudService.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_CloudService,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_CloudService,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_CloudServicePtr,
  );

  static Future<void> clearCache({dynamic hint}) =>
      RustLib.instance.api.cloudServiceClearCache(
        hint: hint,
      );

  static Future<void> copy(
          {required String from, required String to, dynamic hint}) =>
      RustLib.instance.api.cloudServiceCopy(
        from: from,
        to: to,
        hint: hint,
      );

  static Future<List<Entry>> list({required String path, dynamic hint}) =>
      RustLib.instance.api.cloudServiceList(
        path: path,
        hint: hint,
      );

  static Future<Uint8List> read({required String path, dynamic hint}) =>
      RustLib.instance.api.cloudServiceRead(
        path: path,
        hint: hint,
      );

  static Future<void> rename(
          {required String from, required String to, dynamic hint}) =>
      RustLib.instance.api.cloudServiceRename(
        from: from,
        to: to,
        hint: hint,
      );

  static Future<void> write(
          {required String path, required List<int> bs, dynamic hint}) =>
      RustLib.instance.api.cloudServiceWrite(
        path: path,
        bs: bs,
        hint: hint,
      );
}
